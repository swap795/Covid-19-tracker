[{"/Users/swapnilthapa/Documents/GitHub/Covid-19-tracker/my-app/src/index.js":"1","/Users/swapnilthapa/Documents/GitHub/Covid-19-tracker/my-app/src/reportWebVitals.js":"2","/Users/swapnilthapa/Documents/GitHub/Covid-19-tracker/my-app/src/App.js":"3","/Users/swapnilthapa/Documents/GitHub/Covid-19-tracker/my-app/src/components/Info.js":"4","/Users/swapnilthapa/Documents/GitHub/Covid-19-tracker/my-app/src/components/Table.js":"5","/Users/swapnilthapa/Documents/GitHub/Covid-19-tracker/my-app/src/util.js":"6","/Users/swapnilthapa/Documents/GitHub/Covid-19-tracker/my-app/src/components/MapContent.js":"7","/Users/swapnilthapa/Documents/GitHub/Covid-19-tracker/my-app/src/components/CovidGraph.js":"8"},{"size":507,"mtime":1609715532970,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1607727599050,"results":"11","hashOfConfig":"10"},{"size":5291,"mtime":1609723490362,"results":"12","hashOfConfig":"10"},{"size":1132,"mtime":1609715532968,"results":"13","hashOfConfig":"10"},{"size":1572,"mtime":1609715532969,"results":"14","hashOfConfig":"10"},{"size":2655,"mtime":1609715532972,"results":"15","hashOfConfig":"10"},{"size":3568,"mtime":1609715532968,"results":"16","hashOfConfig":"10"},{"size":4211,"mtime":1609715532966,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"125g6rq",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/swapnilthapa/Documents/GitHub/Covid-19-tracker/my-app/src/index.js",[],["38","39"],"/Users/swapnilthapa/Documents/GitHub/Covid-19-tracker/my-app/src/reportWebVitals.js",[],"/Users/swapnilthapa/Documents/GitHub/Covid-19-tracker/my-app/src/App.js",["40","41","42"],"import React, { useState, useEffect } from 'react';\nimport MapContent from './components/MapContent';\nimport Info from './components/Info';\nimport Table from './components/Table';\nimport CovidGraph from './components/CovidGraph';\n\nimport { sortData, numberWithCommas } from './util';\n\n// styles\nimport styled from 'styled-components';\nimport './styles/App.css';\n\n\nimport { Card, CardContent, Typography, withTheme } from '@material-ui/core';\n\n\nconst InfoBoxes = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: #cdd0cb;\n  border-radius: 1rem;\n  padding: 1rem;\n  width: 100%;\n`;\n\n\n/*\n*   These three style stored variables are passed in as props into the Info componenet seperately\n*/\nconst casesColor = {\n  // backgroundColor: '#CC1034',\n  border: '.15rem solid #a55362',\n  backgroundColor: '#dd7588',\n  // color: '#3a3a3a',\n}\n\nconst recoveredColor = {\n  border: '.15rem solid #567e63',\n  backgroundColor: '#80bd94',\n}\n\nconst deathsColor = {\n  border: '.15rem solid #302f2e',\n  backgroundColor: '#5a5655',\n  color: 'white',\n}\n\n\n// API for countries ---> https://disease.sh/v3/covid-19/countries\n\n\n/*\n*\n*     ACTUAL RENDER\n*\n*/\nfunction App() {\n  const [countries, setCountries] = useState([]);                                 // country's name and value\n  const [clickedCountry, setClickedCountry] = useState('All');                    // info of the country that is CLICKED on the dropdown menu\n  const [countryInfo, setCountryInfo] = useState({});                             // gets the WORLD'S INFO first -- if not, then -- country's info\n  const [tableData, setTableData] = useState([]);                                 // data for the table\n  const [mapCenter, setMapCenter] = useState({ lat: 34.80746, lng: -40.4796 });   // map positions\n  const [mapZoom, setMapZoom] = useState(3);                                      // map zoom level\n  const [countryPopupInfo, setCountryPopupInfo] = useState([]);                   // country's info for popup on the Map\n  const [casesType, setCasesType] = useState(\"cases\");                            // which type of case is it? (ex: cases, recovered, deaths)\n\n  /* \n  *   useEffect runs code whenever something changes\n  *   in this case, this useEffect runs when the browser loads\n  * */\n\n  // get the info of the World\n  // total in the world\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then(res => res.json())\n      .then(data => {\n        setCountryInfo(data);\n    });\n  }, [])\n\n  // get the data of all countries\n  useEffect(() => {\n    const getCountries = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n      .then((response) => response.json())                    // only want the JSON stuff\n      .then((data) => {\n        const countries = data.map((country) => (             // loop through every data and only get the country's name and iso3 ('USA')\n          {\n              name: country.country,\n              value: country.countryInfo.iso3,\n          }\n        ));\n\n        // sort the countries by cases for our table\n        let sortedData = sortData(data);\n        setTableData(sortedData);\n\n        setCountries(countries);                              // store data\n        setCountryPopupInfo(data);\n      })\n    }\n\n    getCountries();                                           // call the function \n  }, []);\n\n  return (\n    <div className=\"container\">\n      {\n      /* \n      *   LEFT container\n      *\n      */\n      }\n      <div className=\"left__container\">\n        {/* passing the object as props */}\n        <MapContent \n          allCountries={ countries } \n          clickedCountry={ clickedCountry } \n          setClickedCountry= { setClickedCountry }\n          countryInfo={ countryInfo }\n          setCountryInfo={ setCountryInfo }\n          center={ mapCenter }\n          setCenter={ setMapCenter }\n          zoom={ mapZoom }\n          setZoom={ setMapZoom }\n          countryPopupInfo={ countryPopupInfo }\n          casesType={ casesType }\n        />\n        <InfoBoxes>\n          <Info \n            style={ casesColor }\n            onClick={ () => setCasesType(\"cases\") } \n            casesType={ casesType } \n            title=\"Today's Cases\" \n            case={ countryInfo.todayCases } \n            total={ countryInfo.cases }\n          />\n          <Info \n            style={ recoveredColor }\n            onClick={ () => setCasesType(\"recovered\") } \n            casesType={ casesType } \n            title=\"Today's Recovered\" \n            case={ countryInfo.todayRecovered } \n            total={ countryInfo.recovered }\n          />\n          <Info \n            style={ deathsColor }\n            onClick={ () => setCasesType(\"deaths\") } \n            casesType={ casesType } \n            title=\"Today's Deaths\" \n            case={ countryInfo.todayDeaths } \n            total={ countryInfo.deaths }\n          />\n        </InfoBoxes>\n        <CovidGraph casesType={ casesType } />\n      </div>\n      {\n      /* \n      *   RIGHT container\n      *\n      */\n      }\n      <div className=\"right__container\">\n        <Card>\n          <CardContent>\n            <h2>Live Cases</h2>\n            <Table data={ tableData } />\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/swapnilthapa/Documents/GitHub/Covid-19-tracker/my-app/src/components/Info.js",["43"],"import React, { useState } from 'react';\nimport numeral from 'numeral';\n\nimport styled from 'styled-components';\nimport { Card, CardContent, Typography, makeStyles } from '@material-ui/core';\n\n\nconst useStyle = makeStyles({\n   card: {\n      paddingRight: '4rem',\n      borderRadius: '1rem',\n      margin: '1rem',\n   }\n})\n\nconst H2Style = styled.h2`\n   margin: .3rem .0 .3rem 0;\n`;\n\nconst HoverContainer = styled.div`\n   cursor: pointer;\n   &:hover {\n      filter: brightness(75%);            // using this to make it change the brightness on hover\n   }\n`;\n\nfunction Info(props) {\n   const classes = useStyle();\n\n   return (\n      <HoverContainer onClick={ props.onClick }>\n         <Card className={ classes.card } style={ props.style }>\n            <CardContent>\n               <Typography color=\"white\"><b>{ props.title }</b></Typography>\n               <H2Style>{ numeral(props.case).format('0,0') }</H2Style>\n               <Typography color=\"textSecondary white\">{ numeral(props.total).format('0,0') } is <b>Total</b></Typography>\n            </CardContent>\n         </Card>\n      </HoverContainer>\n   )\n}\n\nexport default Info\n","/Users/swapnilthapa/Documents/GitHub/Covid-19-tracker/my-app/src/components/Table.js",[],"/Users/swapnilthapa/Documents/GitHub/Covid-19-tracker/my-app/src/util.js",[],"/Users/swapnilthapa/Documents/GitHub/Covid-19-tracker/my-app/src/components/MapContent.js",["44","45","46"],"import { MenuItem, FormControl, Select } from '@material-ui/core';\nimport { useMap, MapContainer, TileLayer, Circle, Popup } from 'react-leaflet';\n\nimport styled from 'styled-components';\nimport { drawCircle } from '../util';\n\n\n\n// temporary imports for testing\n\n\nconst MapStyle = styled.div`\n   /* background-color: #acaaaa; */\n   background-color: #cdd0cb;\n   height: 50vh;\n   width: 100%;\n   border-radius: .6rem;\n   padding: 1rem;\n   margin-top: 1rem;\n   margin-bottom: 1rem;\n   box-shadow: 0 0 1rem -.5rem black;\n\n   /* need this to actually display the container */\n   .leaflet-container {\n      width: 100%;\n      height: 100%;\n   }\n`;\n\n\nfunction MapContent(props) {\n   // handles the click on dropdown menu\n   // also sets the info of countries in the infoBoxes\n   const clickHandler = async (event) => {\n      // get the country that is clicked\n      const countryCode = event.target.value;\n      const url = countryCode === 'All' ? 'https://disease.sh/v3/covid-19/all' : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n      await fetch(url)\n         .then(res => res.json())\n         .then(data => {\n            props.setClickedCountry(countryCode);                // set the country code\n            props.setCountryInfo(data);                   // set the country info object\n\n            if(countryCode === 'All') {\n               props.setCenter({ lat: 30, lng: 0 });\n               props.setZoom(2);\n            } else {\n               props.setCenter({ lat: data.countryInfo.lat, lng: data.countryInfo.long });\n            }\n\n            switch(data.continent) {\n               case 'North America':\n                  props.setZoom(4.3);\n                  break;\n               case 'South America':\n                  props.setZoom(5);\n                  break;\n               case 'Africa':\n                  props.setZoom(5);\n                  break;\n               case 'Europe':\n                  props.setZoom(5);\n                  break;\n               case 'Asia':\n                  props.setZoom(5);\n                  break;\n               case 'Australia':\n                  props.setZoom(5);\n                  break;\n            }\n      })\n   }\n\n   // Need this component to override the last value on the map to change its view\n   const MyComponent = () => {\n      const map = useMap();\n      map.setView([props.center.lat, props.center.lng], props.zoom);\n      return null;\n   }\n\n\n   return(\n      <div>\n         <FormControl>\n            <Select \n               variant=\"outlined\" \n               value={ props.clickedCountry }\n               onChange={ clickHandler } \n            >\n               <MenuItem value=\"All\">All</MenuItem>\n               {\n                  props.allCountries.map((country) => (\n                     <MenuItem value={ country.value }>{country.name}</MenuItem>\n                  ))             \n               }\n            </Select>\n         </FormControl>\n         <MapStyle>\n            <MapContainer center={ props.center } zoom={ props.zoom }>\n               <MyComponent />\n               <TileLayer \n                  attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                  url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n               >\n               </TileLayer>\n               {/* Popups for countries */}\n               {\n                  drawCircle(props.countryPopupInfo, props.casesType, props.clickedCountry)\n               }\n            </MapContainer>\n         </MapStyle>\n      </div>\n   );\n}\n\nexport default MapContent;","/Users/swapnilthapa/Documents/GitHub/Covid-19-tracker/my-app/src/components/CovidGraph.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":7,"column":20,"nodeType":"53","messageId":"54","endLine":7,"endColumn":36},{"ruleId":"51","severity":1,"message":"55","line":14,"column":29,"nodeType":"53","messageId":"54","endLine":14,"endColumn":39},{"ruleId":"51","severity":1,"message":"56","line":14,"column":41,"nodeType":"53","messageId":"54","endLine":14,"endColumn":50},{"ruleId":"51","severity":1,"message":"57","line":1,"column":17,"nodeType":"53","messageId":"54","endLine":1,"endColumn":25},{"ruleId":"51","severity":1,"message":"58","line":2,"column":43,"nodeType":"53","messageId":"54","endLine":2,"endColumn":49},{"ruleId":"51","severity":1,"message":"59","line":2,"column":51,"nodeType":"53","messageId":"54","endLine":2,"endColumn":56},{"ruleId":"60","severity":1,"message":"61","line":51,"column":13,"nodeType":"62","messageId":"63","endLine":70,"endColumn":14},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'numberWithCommas' is defined but never used.","Identifier","unusedVar","'Typography' is defined but never used.","'withTheme' is defined but never used.","'useState' is defined but never used.","'Circle' is defined but never used.","'Popup' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation"]