[{"/Users/swapnilthapa/Documents/GitHub/Covid-19-tracker/my-app/src/index.js":"1","/Users/swapnilthapa/Documents/GitHub/Covid-19-tracker/my-app/src/reportWebVitals.js":"2","/Users/swapnilthapa/Documents/GitHub/Covid-19-tracker/my-app/src/App.js":"3","/Users/swapnilthapa/Documents/GitHub/Covid-19-tracker/my-app/src/components/Info.js":"4","/Users/swapnilthapa/Documents/GitHub/Covid-19-tracker/my-app/src/components/Table.js":"5","/Users/swapnilthapa/Documents/GitHub/Covid-19-tracker/my-app/src/util.js":"6","/Users/swapnilthapa/Documents/GitHub/Covid-19-tracker/my-app/src/components/MapContent.js":"7","/Users/swapnilthapa/Documents/GitHub/Covid-19-tracker/my-app/src/components/CovidGraph.js":"8","/Users/swapnilthapa/Documents/GitHub/Covid-19-tracker/my-app/src/components/Footer.js":"9"},{"size":507,"mtime":1609715532970,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1607727599050,"results":"12","hashOfConfig":"11"},{"size":6016,"mtime":1609866981524,"results":"13","hashOfConfig":"11"},{"size":1584,"mtime":1609892123281,"results":"14","hashOfConfig":"11"},{"size":1666,"mtime":1609866889421,"results":"15","hashOfConfig":"11"},{"size":2667,"mtime":1609892123281,"results":"16","hashOfConfig":"11"},{"size":3802,"mtime":1609866889420,"results":"17","hashOfConfig":"11"},{"size":4318,"mtime":1609892123280,"results":"18","hashOfConfig":"11"},{"size":1295,"mtime":1609866889418,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"19jbpor",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},"/Users/swapnilthapa/Documents/GitHub/Covid-19-tracker/my-app/src/index.js",[],["43","44"],"/Users/swapnilthapa/Documents/GitHub/Covid-19-tracker/my-app/src/reportWebVitals.js",[],"/Users/swapnilthapa/Documents/GitHub/Covid-19-tracker/my-app/src/App.js",["45","46","47","48"],"import React, { useState, useEffect } from 'react';\nimport MapContent from './components/MapContent';\nimport Info from './components/Info';\nimport Table from './components/Table';\nimport CovidGraph from './components/CovidGraph';\nimport Footer from './components/Footer';\n\nimport { sortData, numberWithCommas } from './util';\n\n// styles\nimport styled from 'styled-components';\nimport './styles/App.css';\n\n\nimport { Card, CardContent, Typography, withTheme } from '@material-ui/core';\n\n\nconst InfoBoxes = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: #cdd0cb;\n  border-radius: 1rem;\n  padding: 1rem;\n\n  @media (max-width: 1024px) {\n    padding: .5rem;\n    margin-left: 4rem;\n    width: 85%;\n  }\n\n  @media (max-width: 425px) {\n    flex-direction: column;\n    padding: 0.5rem;\n    margin-left: 0.5rem;\n    width: 90%;\n  }\n`;\n\nconst AppHeader = styled.div`\n  font-family: sans-serif, sans-serif;\n  font-weight: bolder;\n  font-size: 2.5rem;\n  text-align: center;\n`;\n\nconst cardStyle = {\n  backgroundColor: '#cdd0cb',\n}\n\n/*\n*   These three style stored variables are passed in as props into the Info componenet seperately\n*/\nconst casesColor = {\n  border: '.15rem solid #a55362',\n  backgroundColor: '#dd7588',\n}\n\nconst recoveredColor = {\n  border: '.15rem solid #567e63',\n  backgroundColor: '#80bd94',\n}\n\nconst deathsColor = {\n  border: '.15rem solid #302f2e',\n  backgroundColor: '#5a5655',\n  color: 'white',\n}\n\n\n// API for countries ---> https://disease.sh/v3/covid-19/countries\n\n\n/*\n*\n*     ACTUAL RENDER\n*\n*/\nfunction App() {\n  const [countries, setCountries] = useState([]);                                 // country's name and value\n  const [clickedCountry, setClickedCountry] = useState('All');                    // info of the country that is CLICKED on the dropdown menu\n  const [countryInfo, setCountryInfo] = useState({});                             // gets the WORLD'S INFO first -- if not, then -- country's info\n  const [tableData, setTableData] = useState([]);                                 // data for the table\n  const [mapCenter, setMapCenter] = useState({ lat: 10, lng: 5 });   // map positions\n  const [mapZoom, setMapZoom] = useState(1.5);                                      // map zoom level\n  const [countryPopupInfo, setCountryPopupInfo] = useState([]);                   // country's info for popup on the Map\n  const [casesType, setCasesType] = useState(\"cases\");                            // which type of case is it? (ex: cases, recovered, deaths)\n\n  /* \n  *   useEffect runs code whenever something changes\n  *   in this case, this useEffect runs when the browser loads\n  * */\n\n  // get the info of the World\n  // total in the world\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then(res => res.json())\n      .then(data => {\n        setCountryInfo(data);\n    });\n  }, [])\n\n  // get the data of all countries\n  useEffect(() => {\n    const getCountries = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n      .then((response) => response.json())                    // only want the JSON stuff\n      .then((data) => {\n        const countries = data.map((country) => (             // loop through every data and only get the country's name and iso3 ('USA')\n          {\n              name: country.country,\n              value: country.countryInfo.iso3,\n          }\n        ));\n\n        // sort the countries by cases for our table\n        let sortedData = sortData(data);\n        setTableData(sortedData);\n\n        setCountries(countries);                              // store data\n        setCountryPopupInfo(data);\n      })\n    }\n\n    getCountries();                                           // call the function \n  }, []);\n\n  return (\n    <div style={{ backgroundColor: '#e8eae6' }}>\n      <div className=\"container\">\n      {\n      /* \n      *   LEFT container\n      *\n      */\n      }\n        <div className=\"left__container\">\n          <AppHeader>COVID-19 Tracker</AppHeader>\n          {/* passing the object as props */}\n          <MapContent \n            allCountries={ countries } \n            clickedCountry={ clickedCountry } \n            setClickedCountry= { setClickedCountry }\n            countryInfo={ countryInfo }\n            setCountryInfo={ setCountryInfo }\n            center={ mapCenter }\n            setCenter={ setMapCenter }\n            zoom={ mapZoom }\n            setZoom={ setMapZoom }\n            countryPopupInfo={ countryPopupInfo }\n            casesType={ casesType }\n          />\n          <InfoBoxes className=\"infoBoxes\">\n            <Info \n              style={ casesColor }\n              onClick={ () => setCasesType(\"cases\") } \n              casesType={ casesType } \n              title=\"Today's Cases\" \n              case={ countryInfo.todayCases } \n              total={ countryInfo.cases }\n            />\n            <Info \n              style={ recoveredColor }\n              onClick={ () => setCasesType(\"recovered\") } \n              casesType={ casesType } \n              title=\"Today's Recovered\" \n              case={ countryInfo.todayRecovered } \n              total={ countryInfo.recovered }\n            />\n            <Info \n              style={ deathsColor }\n              onClick={ () => setCasesType(\"deaths\") } \n              casesType={ casesType } \n              title=\"Today's Deaths\" \n              case={ countryInfo.todayDeaths } \n              total={ countryInfo.deaths }\n            />\n          </InfoBoxes>\n          <CovidGraph casesType={ casesType } />\n        </div>\n        {\n        /* \n        *   RIGHT container\n        *\n        */\n        }\n        <div className=\"right__container\">\n          <Card style={ cardStyle }>\n            <CardContent>\n              <h2>Live Cases</h2>\n              <Table data={ tableData } />\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n      {/* Started Working on it but idk if we need it? */}\n      {/* <Footer /> */}\n    </div>\n  );\n}\n\nexport default App;\n","/Users/swapnilthapa/Documents/GitHub/Covid-19-tracker/my-app/src/components/Info.js",["49"],"import React, { useState } from 'react';\nimport numeral from 'numeral';\n\nimport styled from 'styled-components';\nimport { Card, CardContent, Typography, makeStyles } from '@material-ui/core';\n\n\nconst useStyle = makeStyles((theme) => ({\n   card: {\n      padding: '0 1rem 0 0.5rem',\n      borderRadius: '1rem',\n      margin: '0.5rem',\n\n      // this is material-ui version of responsive design\n      [theme.breakpoints.down('sm')]: {\n         padding: '0',\n         margin: '0',\n      },\n\n      [theme.breakpoints.down('xs')]: {\n         padding: '0',\n      }\n   },\n\n   texts: {\n      [theme.breakpoints.down('xs')]: {\n         fontSize: '1rem',\n      }\n   }\n}))\n\nconst H2Style = styled.h2`\n   margin: .3rem .0 .3rem 0;\n`;\n\nconst HoverContainer = styled.div`\n   cursor: pointer;\n   &:hover {\n      filter: brightness(75%);            // using this to make it change the brightness when hovered on the Info Cards\n   }\n`;\n\nfunction Info(props) {\n   const classes = useStyle();\n\n   return (\n      <HoverContainer onClick={ props.onClick }>\n         <Card className={ classes.card } style={ props.style }>\n            <CardContent>\n               <Typography className= { classes.texts } color=\"white\"><b>{ props.title }</b></Typography>\n               <H2Style className= { classes.texts } >{ numeral(props.case).format('+0,0') }</H2Style>\n               <Typography className= { classes.texts } color=\"textSecondary white\">{ numeral(props.total).format('+0,0') } is <b>Total</b></Typography>\n            </CardContent>\n         </Card>\n      </HoverContainer>\n   )\n}\n\nexport default Info\n","/Users/swapnilthapa/Documents/GitHub/Covid-19-tracker/my-app/src/components/Table.js",[],"/Users/swapnilthapa/Documents/GitHub/Covid-19-tracker/my-app/src/util.js",[],"/Users/swapnilthapa/Documents/GitHub/Covid-19-tracker/my-app/src/components/MapContent.js",["50","51","52"],"import { MenuItem, FormControl, Select } from '@material-ui/core';\nimport { useMap, MapContainer, TileLayer, Circle, Popup } from 'react-leaflet';\n\nimport styled from 'styled-components';\nimport { drawCircle } from '../util';\n\n\n\n// temporary imports for testing\n\n\n\nconst MapHeader = styled.div`\n`;\n\nconst MapStyle = styled.div`\n   /* background-color: #acaaaa; */\n   background-color: #cdd0cb;\n   height: 30rem;\n   width: 95%;\n   border-radius: .6rem;\n   padding: 1rem;\n   margin-top: 1rem;\n   margin-bottom: 1rem;\n   box-shadow: 0 0 1rem -.5rem black;\n\n   /* need this to actually display the container */\n   .leaflet-container {\n      width: 100%;\n      height: 100%;\n   }\n\n   @media (max-width: 1024px) {\n      padding: .5rem;\n      margin-left: 4rem;\n      width: 85%;\n   }\n   \n   @media (max-width: 425px) {\n      margin-left: 1.5rem;\n      width: 80%;\n   }\n`;\n\n\nfunction MapContent(props) {\n   // handles the click on dropdown menu\n   // also sets the info of countries in the infoBoxes\n   const clickHandler = async (event) => {\n      // get the country that is clicked\n      const countryCode = event.target.value;\n      const url = countryCode === 'All' ? 'https://disease.sh/v3/covid-19/all' : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n      await fetch(url)\n         .then(res => res.json())\n         .then(data => {\n            props.setClickedCountry(countryCode);                // set the country code\n            props.setCountryInfo(data);                   // set the country info object\n\n            if(countryCode === 'All') {\n               props.setCenter({ lat: 30, lng: 0 });\n               props.setZoom(2);\n            } else {\n               props.setCenter({ lat: data.countryInfo.lat, lng: data.countryInfo.long });\n            }\n\n            switch(data.continent) {\n               case 'North America':\n                  props.setZoom(4.3);\n                  break;\n               case 'South America':\n                  props.setZoom(5);\n                  break;\n               case 'Africa':\n                  props.setZoom(5);\n                  break;\n               case 'Europe':\n                  props.setZoom(5);\n                  break;\n               case 'Asia':\n                  props.setZoom(5);\n                  break;\n               case 'Australia':\n                  props.setZoom(5);\n                  break;\n            }\n      })\n   }\n\n   // Need this component to override the last value on the map to change its view\n   const MyComponent = () => {\n      const map = useMap();\n      map.setView([props.center.lat, props.center.lng], props.zoom);\n      return null;\n   }\n\n\n   return(\n      <MapHeader>\n         <FormControl>\n            <Select\n               variant=\"outlined\" \n               value={ props.clickedCountry }\n               onChange={ clickHandler } \n            >\n               <MenuItem value=\"All\">All</MenuItem>\n               {\n                  props.allCountries.map((country) => (\n                     <MenuItem value={ country.value }>{country.name}</MenuItem>\n                  ))             \n               }\n            </Select>\n         </FormControl>\n         <MapStyle>\n            <MapContainer center={ props.center } zoom={ props.zoom }>\n               <MyComponent />\n               <TileLayer \n                  attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                  url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n               >\n               </TileLayer>\n               {/* Popups for countries */}\n               {\n                  drawCircle(props.countryPopupInfo, props.casesType, props.clickedCountry)\n               }\n            </MapContainer>\n         </MapStyle>\n      </MapHeader>\n   );\n}\n\nexport default MapContent;","/Users/swapnilthapa/Documents/GitHub/Covid-19-tracker/my-app/src/components/CovidGraph.js",[],"/Users/swapnilthapa/Documents/GitHub/Covid-19-tracker/my-app/src/components/Footer.js",["53","54","55","56"],"import React from 'react';\nimport styled from 'styled-components';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { BottomNavigation, BottomNavigationAction}  from '@material-ui/core';\n\n// icons \nimport EmailIcon from '@material-ui/icons/Email';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport InstagramIcon from '@material-ui/icons/Instagram';\n\n\nconst useStyles = makeStyles({\n   root: {\n      // height: '15%',\n      // width: '30%',\n      backgroundColor: '#424242',\n      margin: 'auto',\n      position: '-webkit-sticky', /* Safari */\n      position: 'sticky',\n   },\n\n   buttonsContainer: {\n      backgroundColor: '#bbbbbb', \n      position: 'relative',\n      borderRadius: '1rem',\n   }\n});\n\nconst FooterStyle = styled.div`\n   h4 {\n      margin-top: 5%;\n      color: white;\n   }\n`;\n\n\nfunction Footer() {\n   const classes = useStyles();\n   return (\n      <BottomNavigation className={classes.root}>\n         <FooterStyle>\n            <h4>Thanks for visiting the site.</h4>\n            <br/>\n            <BottomNavigationAction className={classes.buttonsContainer} label=\"LinkedIn\" value=\"LinkedIn\" icon={ <LinkedInIcon /> }/>\n         </FooterStyle>\n      </BottomNavigation>\n   )\n}\n\nexport default Footer\n",{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":6,"column":8,"nodeType":"63","messageId":"64","endLine":6,"endColumn":14},{"ruleId":"61","severity":1,"message":"65","line":8,"column":20,"nodeType":"63","messageId":"64","endLine":8,"endColumn":36},{"ruleId":"61","severity":1,"message":"66","line":15,"column":29,"nodeType":"63","messageId":"64","endLine":15,"endColumn":39},{"ruleId":"61","severity":1,"message":"67","line":15,"column":41,"nodeType":"63","messageId":"64","endLine":15,"endColumn":50},{"ruleId":"61","severity":1,"message":"68","line":1,"column":17,"nodeType":"63","messageId":"64","endLine":1,"endColumn":25},{"ruleId":"61","severity":1,"message":"69","line":2,"column":43,"nodeType":"63","messageId":"64","endLine":2,"endColumn":49},{"ruleId":"61","severity":1,"message":"70","line":2,"column":51,"nodeType":"63","messageId":"64","endLine":2,"endColumn":56},{"ruleId":"71","severity":1,"message":"72","line":66,"column":13,"nodeType":"73","messageId":"74","endLine":85,"endColumn":14},{"ruleId":"61","severity":1,"message":"75","line":7,"column":8,"nodeType":"63","messageId":"64","endLine":7,"endColumn":17},{"ruleId":"61","severity":1,"message":"76","line":9,"column":8,"nodeType":"63","messageId":"64","endLine":9,"endColumn":20},{"ruleId":"61","severity":1,"message":"77","line":10,"column":8,"nodeType":"63","messageId":"64","endLine":10,"endColumn":21},{"ruleId":"78","severity":1,"message":"79","line":20,"column":7,"nodeType":"80","messageId":"81","endLine":20,"endColumn":15},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'numberWithCommas' is defined but never used.","'Typography' is defined but never used.","'withTheme' is defined but never used.","'useState' is defined but never used.","'Circle' is defined but never used.","'Popup' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'EmailIcon' is defined but never used.","'FacebookIcon' is defined but never used.","'InstagramIcon' is defined but never used.","no-dupe-keys","Duplicate key 'position'.","ObjectExpression","unexpected","no-global-assign","no-unsafe-negation"]